"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrometheusController = void 0;
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/ban-ts-comment */
const common_1 = require("@nestjs/common");
const client = require("prom-client");
/**
 * @public
 *
 * {@inheritDoc PrometheusOptions.controller}
 */
let PrometheusController = class PrometheusController {
    async index(response) {
        // See this issue for why we type this as `unknown`
        // https://github.com/willsoto/nestjs-prometheus/issues/530
        // I currently don't know of any type from NestJS that captures the
        // union of all available responses and I don't want to force users to
        // download types for a framework they aren't using.
        // @ts-expect-error
        response.header("Content-Type", client.register.contentType);
        return client.register.metrics();
    }
};
exports.PrometheusController = PrometheusController;
__decorate([
    (0, common_1.Get)(),
    __param(0, (0, common_1.Res)({ passthrough: true })),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], PrometheusController.prototype, "index", null);
exports.PrometheusController = PrometheusController = __decorate([
    (0, common_1.Controller)()
], PrometheusController);
//# sourceMappingURL=controller.js.map